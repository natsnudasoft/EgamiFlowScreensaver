//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Natsnudasoft.EgamiFlowScreensaver.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Natsnudasoft.EgamiFlowScreensaver.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A behaviour that causes emitted images to transition from one alpha value (transparency) to another over a specified time frame. Valid alpha values are between 0.0 and 1.0 inclusive, although the alpha start value can be less than 0.0 to delay when the transition becomes apparent on screen..
        /// </summary>
        internal static string AlphaChangeBehaviorDescription {
            get {
                return ResourceManager.GetString("AlphaChangeBehaviorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No background image selected..
        /// </summary>
        internal static string ChooseABackgroundImageCaption {
            get {
                return ResourceManager.GetString("ChooseABackgroundImageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must choose a background image when image background mode is selected..
        /// </summary>
        internal static string ChooseABackgroundImageText {
            get {
                return ResourceManager.GetString("ChooseABackgroundImageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A behaviour that causes emitted images to transition from one colour to another over a specified time frame..
        /// </summary>
        internal static string ColorChangeBehaviorDescription {
            get {
                return ResourceManager.GetString("ColorChangeBehaviorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Directory Error.
        /// </summary>
        internal static string ConfigurationIOExceptionCaption {
            get {
                return ResourceManager.GetString("ConfigurationIOExceptionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when attempting to read from or write to the configuration directory..
        /// </summary>
        internal static string ConfigurationIOExceptionMessage {
            get {
                return ResourceManager.GetString("ConfigurationIOExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration File Error.
        /// </summary>
        internal static string ConfigurationProtoExceptionCaption {
            get {
                return ResourceManager.GetString("ConfigurationProtoExceptionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while reading or writing to the configuration file..
        /// </summary>
        internal static string ConfigurationProtoExceptionMessage {
            get {
                return ResourceManager.GetString("ConfigurationProtoExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Load Problem.
        /// </summary>
        internal static string ConfigurationReadSettingsErrorCaption {
            get {
                return ResourceManager.GetString("ConfigurationReadSettingsErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem loading the existing configuration. Choosing to ignore this will create a new configuration and overwrite the existing one. How would you like to proceed?.
        /// </summary>
        internal static string ConfigurationReadSettingsErrorMessage {
            get {
                return ResourceManager.GetString("ConfigurationReadSettingsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Timeout.
        /// </summary>
        internal static string ConfigurationTimeoutExceptionCaption {
            get {
                return ResourceManager.GetString("ConfigurationTimeoutExceptionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timed out while waiting for access to the configuration directory..
        /// </summary>
        internal static string ConfigurationTimeoutExceptionMessage {
            get {
                return ResourceManager.GetString("ConfigurationTimeoutExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Unauthorised Access.
        /// </summary>
        internal static string ConfigurationUnauthorisedAccessExceptionCaption {
            get {
                return ResourceManager.GetString("ConfigurationUnauthorisedAccessExceptionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user does not have access to the configuration directory..
        /// </summary>
        internal static string ConfigurationUnauthorisedAccessExceptionMessage {
            get {
                return ResourceManager.GetString("ConfigurationUnauthorisedAccessExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom Left.
        /// </summary>
        internal static string ImageEmitLocationBottomLeft {
            get {
                return ResourceManager.GetString("ImageEmitLocationBottomLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bottom Right.
        /// </summary>
        internal static string ImageEmitLocationBottomRight {
            get {
                return ResourceManager.GetString("ImageEmitLocationBottomRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Centre.
        /// </summary>
        internal static string ImageEmitLocationCenter {
            get {
                return ResourceManager.GetString("ImageEmitLocationCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom....
        /// </summary>
        internal static string ImageEmitLocationCustom {
            get {
                return ResourceManager.GetString("ImageEmitLocationCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random.
        /// </summary>
        internal static string ImageEmitLocationRandom {
            get {
                return ResourceManager.GetString("ImageEmitLocationRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random Corner.
        /// </summary>
        internal static string ImageEmitLocationRandomCorner {
            get {
                return ResourceManager.GetString("ImageEmitLocationRandomCorner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top Left.
        /// </summary>
        internal static string ImageEmitLocationTopLeft {
            get {
                return ResourceManager.GetString("ImageEmitLocationTopLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top Right.
        /// </summary>
        internal static string ImageEmitLocationTopRight {
            get {
                return ResourceManager.GetString("ImageEmitLocationTopRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Files (*.bmp, *.jpg, *.jpeg, *.png) | *.bmp; *.jpg; *.jpeg; *.png|All Files|*.*.
        /// </summary>
        internal static string ImageFileFilterString {
            get {
                return ResourceManager.GetString("ImageFileFilterString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alpha Change Behaviour.
        /// </summary>
        internal static string ImageItemBehaviorTypeAlphaChange {
            get {
                return ResourceManager.GetString("ImageItemBehaviorTypeAlphaChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colour Change Behaviour.
        /// </summary>
        internal static string ImageItemBehaviorTypeColorChange {
            get {
                return ResourceManager.GetString("ImageItemBehaviorTypeColorChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotation Change Behaviour.
        /// </summary>
        internal static string ImageItemBehaviorTypeRotationChange {
            get {
                return ResourceManager.GetString("ImageItemBehaviorTypeRotationChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale Change Behaviour.
        /// </summary>
        internal static string ImageItemBehaviorTypeScaleChange {
            get {
                return ResourceManager.GetString("ImageItemBehaviorTypeScaleChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Centre.
        /// </summary>
        internal static string ImageScaleModeCenter {
            get {
                return ResourceManager.GetString("ImageScaleModeCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill.
        /// </summary>
        internal static string ImageScaleModeFill {
            get {
                return ResourceManager.GetString("ImageScaleModeFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fit.
        /// </summary>
        internal static string ImageScaleModeFit {
            get {
                return ResourceManager.GetString("ImageScaleModeFit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stretch.
        /// </summary>
        internal static string ImageScaleModeStretch {
            get {
                return ResourceManager.GetString("ImageScaleModeStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tile.
        /// </summary>
        internal static string ImageScaleModeTile {
            get {
                return ResourceManager.GetString("ImageScaleModeTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No configuration options available..
        /// </summary>
        internal static string NoConfigurationFormForBehaviorCaption {
            get {
                return ResourceManager.GetString("NoConfigurationFormForBehaviorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no configuration options available for the selected behaviour type..
        /// </summary>
        internal static string NoConfigurationFormForBehaviorText {
            get {
                return ResourceManager.GetString("NoConfigurationFormForBehaviorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A behaviour that causes emitted images to transition from one rotation value (in degrees) to another over a specified time frame; valid rotation values can be any negative or positive value.
        ///Please note that changing image rotation can cause incorrect collision behaviour when images bounce off of the edges of the screen..
        /// </summary>
        internal static string RotationChangeBehaviorDescription {
            get {
                return ResourceManager.GetString("RotationChangeBehaviorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A behaviour that causes emitted images to transition from one scale (relative size) to another over a specified time frame. Valid scale values are between 0.0 and 1.0 inclusive, although scale start values van be less than 0.0 to delay when the transition becomes apparent on screen.
        ///Please note that changing image scale can cause incorrect collision behaviour when images bounce off of the edges of the screen..
        /// </summary>
        internal static string ScaleChangeBehaviorDescription {
            get {
                return ResourceManager.GetString("ScaleChangeBehaviorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transition time less than image lifetime..
        /// </summary>
        internal static string TransitionTimeLessThanLifetimeCaption {
            get {
                return ResourceManager.GetString("TransitionTimeLessThanLifetimeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transition time of this behaviour is longer than the lifetime of any emitted images, this may cause strange behaviour, are you sure you want to continue with these values?.
        /// </summary>
        internal static string TransitionTimeLessThanLifetimeText {
            get {
                return ResourceManager.GetString("TransitionTimeLessThanLifetimeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Exception.
        /// </summary>
        internal static string UnhandledExceptionCaption {
            get {
                return ResourceManager.GetString("UnhandledExceptionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unhandled exception occurred, please see the log file for more details..
        /// </summary>
        internal static string UnhandledExceptionMessage {
            get {
                return ResourceManager.GetString("UnhandledExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Egami Flow Screensaver.
        /// </summary>
        internal static string WindowTitle {
            get {
                return ResourceManager.GetString("WindowTitle", resourceCulture);
            }
        }
    }
}
